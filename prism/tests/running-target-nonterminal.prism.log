PRISM
=====

Version: 4.0.3.games
Date: Mon Feb 13 10:43:32 GMT 2012
Hostname: bokonon.local
Command line: prism -test -ex -verbose running-target-nonterminal.smg running-target-nonterminal.smg.props

Parsing model file "running-target-nonterminal.smg"...

Parsing properties file "running-target-nonterminal.smg.props"...

12 properties:
(1) filter(forall, <<3, 1>> P>=0.5 [ F "t" ]<=>(s=0|s=2|s=3))
(2) filter(forall, <<2, 1>> P>=0.5 [ F "t" ]<=>(s=3))
(3) filter(forall, <<3, 1>> R{"r"}<=2 [ F "t" ]<=>(s=2|s=3))
(4) filter(forall, <<3, 1>> R{"r"}<=2000 [ F "t" ]<=>(s=2|s=3))
(5) filter(forall, <<3, 1>> R{"r"}>=2 [ F "t" ]<=>(s=0|s=1|s=2|s=4))
(6) filter(forall, <<3, 1>> R{"r"}>=2000 [ F "t" ]<=>(s=0|s=1|s=2|s=4))
(7) filter(forall, <<1>> R{"r"}>=2 [ F0 "t" ]<=>(false))
(8) filter(forall, <<1>> R{"r"}>=2000 [ F0 "t" ]<=>(false))
(9) filter(forall, <<3>> R{"r"}>=2 [ Fc "t" ]<=>(s=0|s=1|s=2))
(10) filter(forall, <<3>> R{"r"}>=2000 [ Fc "t" ]<=>(s=0|s=1|s=2))
(11) filter(forall, <<3>> R{"r"}>=2 [ F0 "t" ]<=>(s=2))
(12) filter(forall, <<3>> R{"r"}>=2000 [ F0 "t" ]<=>(false))

Type:        SMG
Modules:     player1 player2 player3 
Variables:   s 

Switching to explicit engine, which supports SMGs...

---------------------------------------------------------------------

Model checking: filter(forall, <<3, 1>> P>=0.5 [ F "t" ]<=>(s=0|s=2|s=3))

Building model...

Computing reachable states...
maximal rews for rich man's strategy: [0.0, 0.0, 0.0, 0.0, 0.0]
maximal rews for rich man's strategy: [0.0, 0.0, 0.0, 0.0, 0.0]
 5
Reachable states exploration and model construction done in 0.037 secs.
Sorting reachable states list...

Time for model construction: 0.072 seconds.

Type:        SMG
States:      5 (1 initial)
Transitions: 10
Choices:     8
Max/avg:     2/1.60

States satisfying filter true: 5

Number of states satisfying <<3, 1>> P>=0.5 [ F (s=3) ]<=>(s=0|s=2|s=3): 5 (all in model)

Property satisfied in 5 of all 5 states.

Time for model checking: 0.0040 seconds.

Result: true (property satisfied in all states)
Testing result: PASS

---------------------------------------------------------------------

Model checking: filter(forall, <<2, 1>> P>=0.5 [ F "t" ]<=>(s=3))

States satisfying filter true: 5

Number of states satisfying <<2, 1>> P>=0.5 [ F (s=3) ]<=>(s=3): 5 (all in model)

Property satisfied in 5 of all 5 states.

Time for model checking: 0.0010 seconds.

Result: true (property satisfied in all states)
Testing result: PASS

---------------------------------------------------------------------

Model checking: filter(forall, <<3, 1>> R{"r"}<=2 [ F "t" ]<=>(s=2|s=3))
Building reward structure...
Computing rewards...0

States satisfying filter true: 5

Number of states satisfying <<3, 1>> R{"r"}<=2 [ F (s=3) ]<=>(s=2|s=3): 5 (all in model)

Property satisfied in 5 of all 5 states.

Time for model checking: 0.0080 seconds.

Result: true (property satisfied in all states)
Testing result: PASS

---------------------------------------------------------------------

Model checking: filter(forall, <<3, 1>> R{"r"}<=2000 [ F "t" ]<=>(s=2|s=3))
Building reward structure...
Computing rewards...0

States satisfying filter true: 5

Number of states satisfying <<3, 1>> R{"r"}<=2000 [ F (s=3) ]<=>(s=2|s=3): 5 (all in model)

Property satisfied in 5 of all 5 states.

Time for model checking: 0.0010 seconds.

Result: true (property satisfied in all states)
Testing result: PASS

---------------------------------------------------------------------

Model checking: filter(forall, <<3, 1>> R{"r"}>=2 [ F "t" ]<=>(s=0|s=1|s=2|s=4))
Building reward structure...
Computing rewards...0

States satisfying filter true: 5

Number of states satisfying <<3, 1>> R{"r"}>=2 [ F (s=3) ]<=>(s=0|s=1|s=2|s=4): 5 (all in model)

Property satisfied in 5 of all 5 states.

Time for model checking: 0.0010 seconds.

Result: true (property satisfied in all states)
Testing result: PASS

---------------------------------------------------------------------

Model checking: filter(forall, <<3, 1>> R{"r"}>=2000 [ F "t" ]<=>(s=0|s=1|s=2|s=4))
Building reward structure...
Computing rewards...0

States satisfying filter true: 5

Number of states satisfying <<3, 1>> R{"r"}>=2000 [ F (s=3) ]<=>(s=0|s=1|s=2|s=4): 5 (all in model)

Property satisfied in 5 of all 5 states.

Time for model checking: 0.0 seconds.

Result: true (property satisfied in all states)
Testing result: PASS

---------------------------------------------------------------------

Model checking: filter(forall, <<1>> R{"r"}>=2 [ F0 "t" ]<=>(false))
Building reward structure...
Computing rewards...0

States satisfying filter true: 5

Number of states satisfying <<1>> R{"r"}>=2 [ F0 (s=3) ]<=>(false): 5 (all in model)

Property satisfied in 5 of all 5 states.

Time for model checking: 0.0030 seconds.

Result: true (property satisfied in all states)
Testing result: PASS

---------------------------------------------------------------------

Model checking: filter(forall, <<1>> R{"r"}>=2000 [ F0 "t" ]<=>(false))
Building reward structure...
Computing rewards...0

States satisfying filter true: 5

Number of states satisfying <<1>> R{"r"}>=2000 [ F0 (s=3) ]<=>(false): 5 (all in model)

Property satisfied in 5 of all 5 states.

Time for model checking: 0.0020 seconds.

Result: true (property satisfied in all states)
Testing result: PASS

---------------------------------------------------------------------

Model checking: filter(forall, <<3>> R{"r"}>=2 [ Fc "t" ]<=>(s=0|s=1|s=2))
Building reward structure...
Computing rewards...0

States satisfying filter true: 5

Number of states satisfying <<3>> R{"r"}>=2 [ Fc (smaximal rews for rich man's strategy: [0.0, 0.0, 2.0, 0.0, 0.0]
maximal rews for rich man's strategy: [0.0, 0.0, 2.0, 0.0, 0.0]
=3) ]<=>(s=0|s=1|s=2): 5 (all in model)

Property satisfied in 5 of all 5 states.

Time for model checking: 0.0030 seconds.

Result: true (property satisfied in all states)
Testing result: PASS

---------------------------------------------------------------------

Model checking: filter(forall, <<3>> R{"r"}>=2000 [ Fc "t" ]<=>(s=0|s=1|s=2))
Building reward structure...
Computing rewards...0

States satisfying filter true: 5

Number of states satisfying <<3>> R{"r"}>=2000 [ Fc (s=3) ]<=>(s=0|s=1|s=2): 5 (all in model)

Property satisfied in 5 of all 5 states.

Time for model checking: 0.0 seconds.

Result: true (property satisfied in all states)
Testing result: PASS

---------------------------------------------------------------------

Model checking: filter(forall, <<3>> R{"r"}>=2 [ F0 "t" ]<=>(s=2))
Building reward structure...
Computing rewards...0

States satisfying filter true: 5

Number of states satisfying <<3>> R{"r"}>=2 [ F0 (s=3) ]<=>(s=2): 5 (all in model)

Property satisfied in 5 of all 5 states.

Time for model checking: 0.0020 seconds.

Result: true (property satisfied in all states)
Testing result: PASS

---------------------------------------------------------------------

Model checking: filter(forall, <<3>> R{"r"}>=2000 [ F0 "t" ]<=>(false))
Building reward structure...
Computing rewards...0

States satisfying filter true: 5

Number of states satisfying <<3>> R{"r"}>=2000 [ F0 (s=3) ]<=>(false): 5 (all in model)

Property satisfied in 5 of all 5 states.

Time for model checking: 0.0030 seconds.

Result: true (property satisfied in all states)
Testing result: PASS

