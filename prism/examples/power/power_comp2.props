const int t = 0;
const int s_l = 0;

and(R{"time"}>=t [ C ], R{"switches_left"}<=s_l [ C ])

and(R{"switches_left"}/{"time"}<=1.4 [ C ])

and(R{"time"}>=1.4 [ F !safe_left ])

Pmin=? [ F failure ]

and(R{"time"}>=0 [ F failure ])

Pmax=? [ F arrived ]

R{"time"}max=? [ F failure ]

R{"time"}max=? [ F arrived ]

and(R{"time"}max=? [ F arrived ])

impl(R{"time"}<=0 [ F arrived ], R{"time"}>=0 [ F failure ])

and(R{"time"}>=0 [ F arrived ], R{"time"}>=0 [ F failure ])

and(R{"failures"}/{"time"}<=0 [ C ])

and(R{"arrives"}/{"time"}>=0 [ C ])

impl(R{"arrives"}/{"time"}<=0 [ C ], R{"failures"}/{"time"}<=0 [ C ])

and(R{"c4on"}/{"c4off"}<=0 [ C ])

impl(and(R{"arrives"}/{"time"}<=0 [ C ], R{"c4on"}/{"c4off"}>=0 [ C ]), R{"failures"}/{"time"}<=0 [ C ])

